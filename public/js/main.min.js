async function onClickItemOperation(event,path){let form=event.target.closest(".request-form"),inputs=form.querySelectorAll("[name]"),values={};[].map.call(inputs,(input=>{values[input.getAttribute("name")]=input.value}));let response=await fetch(path,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(values)}),result=await response.json();clearErrorMassage(form),"false"===result.status?errorMassage(form,result.errors):successMessage()}async function onClickItemRemove(event){let id=event.target.closest(".request-form").getAttribute("data-row"),response=await fetch("/admin/catalog/rm/"+id);"true"===(await response.json()).status&&successMessage()}async function onClickItemCreate(event){await onClickItemOperation(event,"/admin/catalog/create")}function errorMassage(form,errors){for(let key in errors){let input=form.querySelector("[name="+key+"]"),message=input.closest(".item-group").querySelector(".error-message");input.classList.add("error"),message.innerHTML=errors[key]}}function clearErrorMassage(form){form.querySelectorAll("[name].error").forEach((input=>input.classList.remove("error"))),form.querySelectorAll(".error-message").forEach((mess=>mess.innerHTML=""))}function successMessage(event){alert("Успех"),window.location.reload(!1)}export{onClickItemCreate,onClickItemOperation,onClickItemRemove};